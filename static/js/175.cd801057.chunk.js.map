{"version":3,"file":"static/js/175.cd801057.chunk.js","mappings":"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","sources":["components/pokemon-card/index.js"],"sourcesContent":["import './index.scss';\r\nimport {useState, useEffect} from 'react';\r\n\r\nfunction PokemonCard({pokeData}) {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [pokemon, setPokemon] = useState(undefined);\r\n  const [pokemonType, setPokemonType] = useState(undefined);\r\n  const [show, setShow] = useState(false);\r\n  const [pokeColours, setPokeColours] = useState({\r\n    normal: '#A8A77A',\r\n    fire: '#EE8130',\r\n    water: '#6390F0',\r\n    electric: '#F7D02C',\r\n    grass: '#7AC74C',\r\n    ice: '#96D9D6',\r\n    fighting: '#C22E28',\r\n    poison: '#A33EA1',\r\n    ground: '#E2BF65',\r\n    flying: '#A98FF3',\r\n    psychic: '#F95587',\r\n    bug: '#A6B91A',\r\n    rock: '#B6A136',\r\n    ghost: '#735797',\r\n    dragon: '#6F35FC',\r\n    dark: '#705746',\r\n    steel: '#B7B7CE',\r\n    fairy: '#D685AD',\r\n  });\r\n\r\n  useEffect(()=>{\r\n    const getPokemon = async ()=>{\r\n      fetch(pokeData.url).then(res=> res.json())\r\n      .then(data =>{\r\n        setPokemon(data);\r\n        setPokemonType(data.types[0].type.name);\r\n      })\r\n    }\r\n    getPokemon();\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(pokeData){\r\n      setShow(pokeData.show);\r\n    }\r\n  },[pokeData?.show])\r\n\r\n  function ColorLuminance(hex, lum) {\r\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n    if (hex.length < 6) {\r\n      hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\r\n    }\r\n    lum = lum || 0;\r\n  \r\n    var rgb = \"#\", c, i;\r\n    for (i = 0; i < 3; i++) {\r\n      c = parseInt(hex.substr(i*2,2), 16);\r\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n      rgb += (\"00\"+c).substr(c.length);\r\n    }\r\n  \r\n    return rgb;\r\n  }\r\n\r\n  function capFirstLetter(str){\r\n    return str?.charAt(0).toUpperCase() + str?.slice(1);\r\n  }\r\n\r\n  function getPercent(stat, val){\r\n    if(stat === 'hp'){\r\n      return (val*100)/255;\r\n    }else if(stat === 'attack'){\r\n      return (val*100)/190;\r\n    }else if(stat === 'defense'){\r\n      return (val*100)/250;\r\n    }else if(stat === 'special-attack'){\r\n      return (val*100)/194;\r\n    }else if(stat === 'special-defense'){\r\n      return (val*100)/250;\r\n    }else if(stat === 'speed'){\r\n      return (val*100)/200;\r\n    }\r\n  }\r\n\r\n  if(!pokeData || !pokeData.show){\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"card-front\" style={{backgroundColor:pokeColours[pokemon?.types[0]?.type?.name]}}>\r\n            <div className=\"image-container\" \r\n            style={{\r\n              backgroundColor: ColorLuminance(pokeColours[pokemon?.types[0]?.type?.name],0.5),\r\n              }}>\r\n              <img src={pokemon?.sprites?.other['official-artwork']?.front_default} onLoad={()=>{setLoading(false)}}></img>\r\n            </div>\r\n            <div className=\"text-style\">\r\n              <span className='id'>#{ capFirstLetter(String(pokemon?.id)) }</span>\r\n            </div>\r\n            <div className=\"text-style\">\r\n              <span>{ capFirstLetter(pokemon?.name) }</span>\r\n            </div>\r\n            <div className=\"text-style\">\r\n              <span>{ capFirstLetter(pokemon?.types[0]?.type?.name) }</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-back\">\r\n            <div className=\"stats\">\r\n            {pokemon?.stats?.map((stat, key)=>{\r\n              return (\r\n                  <div key={key} className=\"stat\">\r\n                    <span className='stat-name'>{ capFirstLetter(stat?.stat?.name) }</span>\r\n                      <div className=\"progress-wrapper\">\r\n                        <div className=\"progress-bar\" \r\n                        style={{width: `${getPercent(stat?.stat?.name, stat?.base_stat)}%`}}\r\n                        >\r\n                        </div>\r\n                      </div>\r\n                    <span>{stat.base_stat}</span>\r\n                  </div>\r\n              )\r\n            })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonCard;\r\n"],"names":["pokeData","useState","setLoading","undefined","pokemon","setPokemon","setPokemonType","setShow","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","pokeColours","capFirstLetter","str","charAt","toUpperCase","slice","getPercent","stat","val","useEffect","getPokemon","fetch","url","then","res","json","data","types","type","name","show","className","style","backgroundColor","hex","lum","String","replace","length","c","i","rgb","parseInt","substr","Math","round","min","max","toString","ColorLuminance","src","sprites","other","front_default","onLoad","id","stats","map","key","width","base_stat"],"sourceRoot":""}